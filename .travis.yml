language: shell
os: linux
dist: xenial
addons:
  apt:
    packages: &default_packages
    - cmake
    - make
    - zlib1g-dev
    - libbz2-dev
    - vim-common
    - shellcheck

jobs:
  include:
  - addons:
      apt:
        packages:
        - *default_packages
        - build-essential
        - g++-8
        - gcc-8
    arch: arm64
    env: CC=gcc-8 CXX=g++-8 MMSEQS_NUM_THREADS=4
    dist: bionic
  - addons:
      apt:
        packages:
          - *default_packages
          - build-essential
          - g++-8
          - gcc-8
    arch: ppc64le
    dist: bionic
    env: CC=gcc-8 CXX=g++-8 MMSEQS_NUM_THREADS=4
  - addons:
      apt:
        packages:
        - *default_packages
        - clang-5.0
        - libc++-dev
        - libomp-dev
    env: CC=clang-5.0 CXX=clang++-5.0
  - addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main'
          key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
        - *default_packages
        - clang-10
        - libc++-10-dev
        - libc++abi-10-dev
        - libomp-10-dev
    env: CC=clang-10 CXX=clang++-10
  - addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main'
          key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
        - *default_packages
        - clang-10
        - libc++-10-dev
        - libc++abi-10-dev
        - libomp-10-dev
        - mpi-default-dev
        - mpi-default-bin
    env: MPI=1 CC=clang-10 CXX=clang++-10
  - addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - *default_packages
        - gcc-4.9
        - g++-4.9
    env: CC=gcc-4.9 CXX=g++-4.9
  - addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - *default_packages
        - gcc-9
        - g++-9
    env: CC=gcc-9 CXX=g++-9
  - addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - *default_packages
        - gcc-9
        - g++-9
        - mpi-default-dev
        - mpi-default-bin
    env: MPI=1 CC=gcc-9 CXX=g++-9
  - addons:
      apt:
        sources:
        - sourceline: 'deb https://apt.repos.intel.com/oneapi all main'
          key_url: 'https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB'
        packages:
        - *default_packages
        - build-essential
        - intel-oneapi-icc
    env: CC=icc CXX=icpc
    # icc is broken with beta08
    if: false
  fast_finish: true

before_install:
  - export CC
  - export CXX

script:
  - |
    if [ -e "/opt/intel/inteloneapi/setvars.sh" ]; then source /opt/intel/inteloneapi/setvars.sh; fi; \
    mkdir build; cd build; \
    cmake -DHAVE_MPI="$([[ -z "$MPI" ]]; echo $?)" -DENABLE_WERROR=1 -DHAVE_TESTS=1 ..; \
    make -j ${MMSEQS_NUM_THREADS:-$(nproc --all)}; \
    mkdir path; \
    printf '#!/bin/sh\n/usr/bin/tee "$@" | tail\n' > path/tee; \
    chmod +x path/tee; \
    export PATH="$(readlink -f path):$PATH"; \
    export TTY=0; \
    ../util/regression/run_regression.sh ./src/mmseqs SCRATCH;
